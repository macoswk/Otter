{"version":3,"file":"options.js","mappings":";;;;;;;;;;;;;;AAAO;AACP,UAAU,mBAAmB;AAC7B;AACA;AACA,UAAU,oBAAoB;AAC9B;AACA;AACA,UAAU,6BAA6B;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;UCfA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACNoD;;AAEpD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB,QAAQ,IAAI,QAAQ;AACzC;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,GAAG;;AAEH;AACA,0DAA0D,kBAAkB;AAC5E;AACA,GAAG;;AAEH;AACA;AACA;AACA,gBAAgB,mBAAmB;AACnC;AACA;AACA;;AAEA,EAAE,iEAAe,WAAW,qCAAqC;AACjE;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,GAAG;AACH","sources":["webpack://otter-extension/./src/getStorageItems.js","webpack://otter-extension/webpack/bootstrap","webpack://otter-extension/webpack/runtime/define property getters","webpack://otter-extension/webpack/runtime/hasOwnProperty shorthand","webpack://otter-extension/webpack/runtime/make namespace object","webpack://otter-extension/./src/options.js"],"sourcesContent":["export const getStorageItems = async () => {\n  const { otterInstanceUrl } = await chrome.storage.sync.get(\n    'otterInstanceUrl'\n  );\n  const { supabaseApiSecret } = await chrome.storage.sync.get(\n    'supabaseApiSecret'\n  );\n  const { newBookmarkWindowBehaviour } = await chrome.storage.sync.get(\n    'newBookmarkWindowBehaviour'\n  );\n  return {\n    otterInstanceUrl,\n    supabaseApiSecret,\n    newBookmarkWindowBehaviour,\n  };\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { getStorageItems } from './getStorageItems';\n\nwindow.onload = function () {\n  const optionsForm = document.querySelector('form');\n  const errorDiv = document.querySelector('.error');\n  optionsForm.addEventListener('submit', (event) => {\n    event.preventDefault();\n\n    const formData = new FormData(optionsForm);\n    for (const pair of formData.entries()) {\n      console.log(`${pair[0]}, ${pair[1]}`);\n    }\n\n    chrome.storage.sync.set({\n      otterInstanceUrl: formData.get('url'),\n      supabaseApiSecret: formData.get('api-secret'),\n      newBookmarkWindowBehaviour: formData.get('new-bookmark-window-behaviour'),\n    });\n    chrome.action.setBadgeText({\n      text: '',\n    });\n    errorDiv.setAttribute('hidden', true);\n  });\n\n  const urlField = document.querySelector('#url');\n  chrome.storage.sync.get('otterInstanceUrl', function ({ otterInstanceUrl }) {\n    urlField.value = otterInstanceUrl;\n  });\n\n  const apiSecretField = document.querySelector('#api-secret');\n  chrome.storage.sync.get(\n    'supabaseApiSecret',\n    function ({ supabaseApiSecret }) {\n      apiSecretField.value = supabaseApiSecret;\n    }\n  );\n\n  getStorageItems().then(({ otterInstanceUrl, supabaseApiSecret }) => {\n    console.log(`ðŸš€ ~ supabaseApiSecret`, supabaseApiSecret);\n    if (!otterInstanceUrl || !supabaseApiSecret) {\n      errorDiv.removeAttribute('hidden');\n    } else {\n      errorDiv.setAttribute('hidden', true);\n    }\n  });\n};\n"],"names":[],"sourceRoot":""}