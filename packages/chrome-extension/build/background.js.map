{"version":3,"file":"background.js","mappings":";;;;;;;;;;AAAa;AACb,uBAAuB,EAAE;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA,kBAAkB,mBAAmB;AACrC;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA,iBAAiB,oBAAoB;AACrC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;;;;;;;;;;AC7Fa;AACb;AACA;AACA;AACA;;AAEA,iBAAiB,iBAAiB;AAClC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;AChBuC;AACvC;AACA;;AAEA;AACA;AACA,gBAAgB,KAAK;AACrB;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA,yFAAyF;;AAEzF,oBAAoB;;AAEpB;AACA;AACA;AACA;;AAEA;AACA,IAAI;;;AAGJ;AACA;AACA,IAAI;;;AAGJ;AACA;AACA,IAAI;;;AAGJ,kBAAkB,GAAG,+CAAiB;AACtC;AACA;AACA,mBAAmB,mDAAqB;;AAExC;AACA,eAAe,SAAS;AACxB;;AAEA;AACA;;AAEA;AACA;AACA,eAAe;AACf;;AAEA;AACA;AACA;AACA,IAAI;;;AAGJ;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL,iCAAiC;AACjC;;AAEA,kDAAkD;;AAElD;AACA;;AAEA,iEAAe,OAAO;;;;;;;;;;ACxGT;AACb,wBAAwB,mBAAO,CAAC,+GAAmB;AACnD,wBAAwB,mBAAO,CAAC,wHAAsB;AACtD,qBAAqB,mBAAO,CAAC,sGAAgB;AAC7C,qBAAqB,mBAAO,CAAC,0FAAY;;AAEzeAAe;AACf,aAAa;;AAEb,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;AACF;;AAEA,gBAAgB;AAChB;AACA;AACA,EAAE;;AAEF;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH,wDAAwD,2CAA2C;AACnG;AACA;;AAEA,oBAAoB;AACpB;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA,yDAAyD,YAAY;;AAErE;AACA;AACA;AACA,oBAAoB,YAAY;AAChC;;AAEA;AACA;AACA,aAAa,2CAA2C;AACxD;;AAEA,WAAW,IAAI,EAAE,YAAY,EAAE,KAAK;AACpC;;AAEA,YAAY;AACZ;AACA;AACA,EAAE;;AAEF,QAAQ,gCAAgC;AACxC;AACA;AACA;AACA;AACA,EAAE;AACF;;AAEA,eAAe;AACf;;AAEA;AACA;;;;;;;;;;;ACnZa;;AAEb;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACrBa;AACb,6EAA6E,2CAA2C;;;;;;;;;;;;;;;ACDjH;AACP,UAAU,mBAAmB;AAC7B;AACA;AACA,UAAU,oBAAoB;AAC9B;AACA;AACA,UAAU,6BAA6B;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;UCfA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;ACNa;AACyB;AACc;;AAEpD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;;AAER;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,YAAY,sCAAsC,QAAQ,iEAAe;AACzE;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA,UAAU,+CAA+C;AACzD,UAAU,iEAAe;AACzB;AACA;AACA;AACA,WAAW,2DAAO;AAClB;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP,KAAK;AACL,IAAI;AACJ;AACA;AACA;AACA,WAAW,2DAAO;AAClB;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,mBAAmB,QAAQ,iEAAe;AACtD;AACA,MAAM,2DAAO;AACb;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA,YAAY,OAAO;AACnB;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA,YAAY,mBAAmB,QAAQ,iEAAe;AACtD;AACA,MAAM,2DAAO;AACb;AACA;AACA,SAAS;AACT,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA,UAAU,oBAAoB,QAAQ,iEAAe;AACrD;AACA;AACA;AACA,+BAA+B,kBAAkB;AACjD,KAAK;AACL,GAAG;AACH;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,yBAAyB,4CAA4C;AACrE;AACA;;AAEA;AACA,YAAY,mBAAmB,QAAQ,iEAAe;AACtD;AACA,YAAY,gBAAgB;AAC5B;AACA;AACA;AACA,aAAa,2DAAO;AACpB,OAAO;AACP,MAAM;AACN;AACA;AACA,IAAI;AACJ;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,CAAC;;AAED;AACA,6BAA6B,cAAc;AAC3C;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,gBAAgB;AAC5B;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA,IAAI;AACJ;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,CAAC","sources":["webpack://otter-extension/./node_modules/.pnpm/decode-uri-component@0.2.0/node_modules/decode-uri-component/index.js","webpack://otter-extension/./node_modules/.pnpm/filter-obj@1.1.0/node_modules/filter-obj/index.js","webpack://otter-extension/./node_modules/.pnpm/proper-url-join@2.1.1/node_modules/proper-url-join/es/index.js","webpack://otter-extension/./node_modules/.pnpm/query-string@6.14.1/node_modules/query-string/index.js","webpack://otter-extension/./node_modules/.pnpm/split-on-first@1.1.0/node_modules/split-on-first/index.js","webpack://otter-extension/./node_modules/.pnpm/strict-uri-encode@2.0.0/node_modules/strict-uri-encode/index.js","webpack://otter-extension/./src/getStorageItems.js","webpack://otter-extension/webpack/bootstrap","webpack://otter-extension/webpack/runtime/define property getters","webpack://otter-extension/webpack/runtime/hasOwnProperty shorthand","webpack://otter-extension/webpack/runtime/make namespace object","webpack://otter-extension/./src/background.js"],"sourcesContent":["'use strict';\nvar token = '%[a-f0-9]{2}';\nvar singleMatcher = new RegExp(token, 'gi');\nvar multiMatcher = new RegExp('(' + token + ')+', 'gi');\n\nfunction decodeComponents(components, split) {\n\ttry {\n\t\t// Try to decode the entire string first\n\t\treturn decodeURIComponent(components.join(''));\n\t} catch (err) {\n\t\t// Do nothing\n\t}\n\n\tif (components.length === 1) {\n\t\treturn components;\n\t}\n\n\tsplit = split || 1;\n\n\t// Split the array in 2 parts\n\tvar left = components.slice(0, split);\n\tvar right = components.slice(split);\n\n\treturn Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\n}\n\nfunction decode(input) {\n\ttry {\n\t\treturn decodeURIComponent(input);\n\t} catch (err) {\n\t\tvar tokens = input.match(singleMatcher);\n\n\t\tfor (var i = 1; i < tokens.length; i++) {\n\t\t\tinput = decodeComponents(tokens, i).join('');\n\n\t\t\ttokens = input.match(singleMatcher);\n\t\t}\n\n\t\treturn input;\n\t}\n}\n\nfunction customDecodeURIComponent(input) {\n\t// Keep track of all the replacements and prefill the map with the `BOM`\n\tvar replaceMap = {\n\t\t'%FE%FF': '\\uFFFD\\uFFFD',\n\t\t'%FF%FE': '\\uFFFD\\uFFFD'\n\t};\n\n\tvar match = multiMatcher.exec(input);\n\twhile (match) {\n\t\ttry {\n\t\t\t// Decode as big chunks as possible\n\t\t\treplaceMap[match[0]] = decodeURIComponent(match[0]);\n\t\t} catch (err) {\n\t\t\tvar result = decode(match[0]);\n\n\t\t\tif (result !== match[0]) {\n\t\t\t\treplaceMap[match[0]] = result;\n\t\t\t}\n\t\t}\n\n\t\tmatch = multiMatcher.exec(input);\n\t}\n\n\t// Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\n\treplaceMap['%C2'] = '\\uFFFD';\n\n\tvar entries = Object.keys(replaceMap);\n\n\tfor (var i = 0; i < entries.length; i++) {\n\t\t// Replace all decoded components\n\t\tvar key = entries[i];\n\t\tinput = input.replace(new RegExp(key, 'g'), replaceMap[key]);\n\t}\n\n\treturn input;\n}\n\nmodule.exports = function (encodedURI) {\n\tif (typeof encodedURI !== 'string') {\n\t\tthrow new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');\n\t}\n\n\ttry {\n\t\tencodedURI = encodedURI.replace(/\\+/g, ' ');\n\n\t\t// Try the built in decoder first\n\t\treturn decodeURIComponent(encodedURI);\n\t} catch (err) {\n\t\t// Fallback to a more advanced decoder\n\t\treturn customDecodeURIComponent(encodedURI);\n\t}\n};\n","'use strict';\nmodule.exports = function (obj, predicate) {\n\tvar ret = {};\n\tvar keys = Object.keys(obj);\n\tvar isArr = Array.isArray(predicate);\n\n\tfor (var i = 0; i < keys.length; i++) {\n\t\tvar key = keys[i];\n\t\tvar val = obj[key];\n\n\t\tif (isArr ? predicate.indexOf(key) !== -1 : predicate(key, val, obj)) {\n\t\t\tret[key] = val;\n\t\t}\n\t}\n\n\treturn ret;\n};\n","import queryString from 'query-string';\nconst defaultUrlRegExp = /^(\\w+:\\/\\/[^/?]+)?(.*?)(\\?.+)?$/;\nconst protocolRelativeUrlRegExp = /^(\\/\\/[^/?]+)(.*?)(\\?.+)?$/;\n\nconst normalizeParts = parts => parts // Filter non-string or non-numeric values\n.filter(part => typeof part === 'string' || typeof part === 'number') // Convert to strings\n.map(part => `${part}`) // Remove empty parts\n.filter(part => part);\n\nconst parseParts = (parts, options) => {\n  const {\n    protocolRelative\n  } = options;\n  const partsStr = parts.join('/');\n  const urlRegExp = protocolRelative ? protocolRelativeUrlRegExp : defaultUrlRegExp;\n  const [, prefix = '', pathname = '', suffix = ''] = partsStr.match(urlRegExp) || [];\n  return {\n    prefix,\n    pathname: {\n      parts: pathname.split('/').filter(part => part !== ''),\n      hasLeading: suffix ? /^\\/\\/+/.test(pathname) : /^\\/+/.test(pathname),\n      hasTrailing: suffix ? /\\/\\/+$/.test(pathname) : /\\/+$/.test(pathname)\n    },\n    suffix\n  };\n};\n\nconst buildUrl = (parsedParts, options) => {\n  const {\n    prefix,\n    pathname,\n    suffix\n  } = parsedParts;\n  const {\n    parts: pathnameParts,\n    hasLeading,\n    hasTrailing\n  } = pathname;\n  const {\n    leadingSlash,\n    trailingSlash\n  } = options;\n  const addLeading = leadingSlash === true || leadingSlash === 'keep' && hasLeading;\n  const addTrailing = trailingSlash === true || trailingSlash === 'keep' && hasTrailing; // Start with prefix if not empty (http://google.com)\n\n  let url = prefix; // Add the parts\n\n  if (pathnameParts.length > 0) {\n    if (url || addLeading) {\n      url += '/';\n    }\n\n    url += pathnameParts.join('/');\n  } // Add trailing to the end\n\n\n  if (addTrailing) {\n    url += '/';\n  } // Add leading if URL is still empty\n\n\n  if (!url && addLeading) {\n    url += '/';\n  } // Build a query object based on the url query string and options query object\n\n\n  const query = { ...queryString.parse(suffix, options.queryOptions),\n    ...options.query\n  };\n  const queryStr = queryString.stringify(query, options.queryOptions);\n\n  if (queryStr) {\n    url += `?${queryStr}`;\n  }\n\n  return url;\n};\n\nconst urlJoin = (...parts) => {\n  const lastArg = parts[parts.length - 1];\n  let options; // If last argument is an object, then it's the options\n  // Note that null is an object, so we verify if is truthy\n\n  if (lastArg && typeof lastArg === 'object') {\n    options = lastArg;\n    parts = parts.slice(0, -1);\n  } // Parse options\n\n\n  options = {\n    leadingSlash: true,\n    trailingSlash: false,\n    protocolRelative: false,\n    ...options\n  }; // Normalize parts before parsing them\n\n  parts = normalizeParts(parts); // Split the parts into prefix, pathname, and suffix\n  // (scheme://host)(/pathnameParts.join('/'))(?queryString)\n\n  const parsedParts = parseParts(parts, options); // Finaly build the url based on the parsedParts\n\n  return buildUrl(parsedParts, options);\n};\n\nexport default urlJoin;","'use strict';\nconst strictUriEncode = require('strict-uri-encode');\nconst decodeComponent = require('decode-uri-component');\nconst splitOnFirst = require('split-on-first');\nconst filterObject = require('filter-obj');\n\nconst isNullOrUndefined = value => value === null || value === undefined;\n\nfunction encoderForArrayFormat(options) {\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tconst index = result.length;\n\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[', index, ']'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join('')\n\t\t\t\t];\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[]'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '[]=', encode(value, options)].join('')];\n\t\t\t};\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (value === null || value === undefined || value.length === 0) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (result.length === 0) {\n\t\t\t\t\treturn [[encode(key, options), '=', encode(value, options)].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [[result, encode(value, options)].join(options.arrayFormatSeparator)];\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, encode(key, options)];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '=', encode(value, options)].join('')];\n\t\t\t};\n\t}\n}\n\nfunction parserForArrayFormat(options) {\n\tlet result;\n\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /\\[(\\d*)\\]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(\\[\\])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = typeof value === 'string' && value.includes(options.arrayFormatSeparator);\n\t\t\t\tconst isEncodedArray = (typeof value === 'string' && !isArray && decode(value, options).includes(options.arrayFormatSeparator));\n\t\t\t\tvalue = isEncodedArray ? decode(value, options) : value;\n\t\t\t\tconst newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map(item => decode(item, options)) : value === null ? value : decode(value, options);\n\t\t\t\taccumulator[key] = newValue;\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\t}\n}\n\nfunction validateArrayFormatSeparator(value) {\n\tif (typeof value !== 'string' || value.length !== 1) {\n\t\tthrow new TypeError('arrayFormatSeparator must be single character string');\n\t}\n}\n\nfunction encode(value, options) {\n\tif (options.encode) {\n\t\treturn options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction decode(value, options) {\n\tif (options.decode) {\n\t\treturn decodeComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t}\n\n\tif (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input))\n\t\t\t.sort((a, b) => Number(a) - Number(b))\n\t\t\t.map(key => input[key]);\n\t}\n\n\treturn input;\n}\n\nfunction removeHash(input) {\n\tconst hashStart = input.indexOf('#');\n\tif (hashStart !== -1) {\n\t\tinput = input.slice(0, hashStart);\n\t}\n\n\treturn input;\n}\n\nfunction getHash(url) {\n\tlet hash = '';\n\tconst hashStart = url.indexOf('#');\n\tif (hashStart !== -1) {\n\t\thash = url.slice(hashStart);\n\t}\n\n\treturn hash;\n}\n\nfunction extract(input) {\n\tinput = removeHash(input);\n\tconst queryStart = input.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\n\treturn input.slice(queryStart + 1);\n}\n\nfunction parseValue(value, options) {\n\tif (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === 'string' && value.trim() !== '')) {\n\t\tvalue = Number(value);\n\t} else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {\n\t\tvalue = value.toLowerCase() === 'true';\n\t}\n\n\treturn value;\n}\n\nfunction parse(query, options) {\n\toptions = Object.assign({\n\t\tdecode: true,\n\t\tsort: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',',\n\t\tparseNumbers: false,\n\t\tparseBooleans: false\n\t}, options);\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst formatter = parserForArrayFormat(options);\n\n\t// Create an object with no prototype\n\tconst ret = Object.create(null);\n\n\tif (typeof query !== 'string') {\n\t\treturn ret;\n\t}\n\n\tquery = query.trim().replace(/^[?#&]/, '');\n\n\tif (!query) {\n\t\treturn ret;\n\t}\n\n\tfor (const param of query.split('&')) {\n\t\tif (param === '') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tlet [key, value] = splitOnFirst(options.decode ? param.replace(/\\+/g, ' ') : param, '=');\n\n\t\t// Missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tvalue = value === undefined ? null : ['comma', 'separator'].includes(options.arrayFormat) ? value : decode(value, options);\n\t\tformatter(decode(key, options), value, ret);\n\t}\n\n\tfor (const key of Object.keys(ret)) {\n\t\tconst value = ret[key];\n\t\tif (typeof value === 'object' && value !== null) {\n\t\t\tfor (const k of Object.keys(value)) {\n\t\t\t\tvalue[k] = parseValue(value[k], options);\n\t\t\t}\n\t\t} else {\n\t\t\tret[key] = parseValue(value, options);\n\t\t}\n\t}\n\n\tif (options.sort === false) {\n\t\treturn ret;\n\t}\n\n\treturn (options.sort === true ? Object.keys(ret).sort() : Object.keys(ret).sort(options.sort)).reduce((result, key) => {\n\t\tconst value = ret[key];\n\t\tif (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(value);\n\t\t} else {\n\t\t\tresult[key] = value;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n}\n\nexports.extract = extract;\nexports.parse = parse;\n\nexports.stringify = (object, options) => {\n\tif (!object) {\n\t\treturn '';\n\t}\n\n\toptions = Object.assign({\n\t\tencode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ','\n\t}, options);\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst shouldFilter = key => (\n\t\t(options.skipNull && isNullOrUndefined(object[key])) ||\n\t\t(options.skipEmptyString && object[key] === '')\n\t);\n\n\tconst formatter = encoderForArrayFormat(options);\n\n\tconst objectCopy = {};\n\n\tfor (const key of Object.keys(object)) {\n\t\tif (!shouldFilter(key)) {\n\t\t\tobjectCopy[key] = object[key];\n\t\t}\n\t}\n\n\tconst keys = Object.keys(objectCopy);\n\n\tif (options.sort !== false) {\n\t\tkeys.sort(options.sort);\n\t}\n\n\treturn keys.map(key => {\n\t\tconst value = object[key];\n\n\t\tif (value === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (value === null) {\n\t\t\treturn encode(key, options);\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\treturn value\n\t\t\t\t.reduce(formatter(key), [])\n\t\t\t\t.join('&');\n\t\t}\n\n\t\treturn encode(key, options) + '=' + encode(value, options);\n\t}).filter(x => x.length > 0).join('&');\n};\n\nexports.parseUrl = (url, options) => {\n\toptions = Object.assign({\n\t\tdecode: true\n\t}, options);\n\n\tconst [url_, hash] = splitOnFirst(url, '#');\n\n\treturn Object.assign(\n\t\t{\n\t\t\turl: url_.split('?')[0] || '',\n\t\t\tquery: parse(extract(url), options)\n\t\t},\n\t\toptions && options.parseFragmentIdentifier && hash ? {fragmentIdentifier: decode(hash, options)} : {}\n\t);\n};\n\nexports.stringifyUrl = (object, options) => {\n\toptions = Object.assign({\n\t\tencode: true,\n\t\tstrict: true\n\t}, options);\n\n\tconst url = removeHash(object.url).split('?')[0] || '';\n\tconst queryFromUrl = exports.extract(object.url);\n\tconst parsedQueryFromUrl = exports.parse(queryFromUrl, {sort: false});\n\n\tconst query = Object.assign(parsedQueryFromUrl, object.query);\n\tlet queryString = exports.stringify(query, options);\n\tif (queryString) {\n\t\tqueryString = `?${queryString}`;\n\t}\n\n\tlet hash = getHash(object.url);\n\tif (object.fragmentIdentifier) {\n\t\thash = `#${encode(object.fragmentIdentifier, options)}`;\n\t}\n\n\treturn `${url}${queryString}${hash}`;\n};\n\nexports.pick = (input, filter, options) => {\n\toptions = Object.assign({\n\t\tparseFragmentIdentifier: true\n\t}, options);\n\n\tconst {url, query, fragmentIdentifier} = exports.parseUrl(input, options);\n\treturn exports.stringifyUrl({\n\t\turl,\n\t\tquery: filterObject(query, filter),\n\t\tfragmentIdentifier\n\t}, options);\n};\n\nexports.exclude = (input, filter, options) => {\n\tconst exclusionFilter = Array.isArray(filter) ? key => !filter.includes(key) : (key, value) => !filter(key, value);\n\n\treturn exports.pick(input, exclusionFilter, options);\n};\n","'use strict';\n\nmodule.exports = (string, separator) => {\n\tif (!(typeof string === 'string' && typeof separator === 'string')) {\n\t\tthrow new TypeError('Expected the arguments to be of type `string`');\n\t}\n\n\tif (separator === '') {\n\t\treturn [string];\n\t}\n\n\tconst separatorIndex = string.indexOf(separator);\n\n\tif (separatorIndex === -1) {\n\t\treturn [string];\n\t}\n\n\treturn [\n\t\tstring.slice(0, separatorIndex),\n\t\tstring.slice(separatorIndex + separator.length)\n\t];\n};\n","'use strict';\nmodule.exports = str => encodeURIComponent(str).replace(/[!'()*]/g, x => `%${x.charCodeAt(0).toString(16).toUpperCase()}`);\n","export const getStorageItems = async () => {\n  const { otterInstanceUrl } = await chrome.storage.sync.get(\n    'otterInstanceUrl'\n  );\n  const { supabaseApiSecret } = await chrome.storage.sync.get(\n    'supabaseApiSecret'\n  );\n  const { newBookmarkWindowBehaviour } = await chrome.storage.sync.get(\n    'newBookmarkWindowBehaviour'\n  );\n  return {\n    otterInstanceUrl,\n    supabaseApiSecret,\n    newBookmarkWindowBehaviour,\n  };\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","'use strict';\nimport urlJoin from 'proper-url-join';\nimport { getStorageItems } from './getStorageItems';\n\n// With background scripts you can communicate with popup\n// and contentScript files.\n// For more information on background script,\n// See https://developer.chrome.com/extensions/background_pages\n\n// chrome.runtime.onMessage.addListener((request, sender, sendResponse) => {\n//   if (request.type === 'GREETINGS') {\n//     const message = `Hi ${\n//       sender.tab ? 'Con' : 'Pop'\n//     }, my name is Bac. I am from Background. It's great to hear from you.`;\n\n//     // Log message coming from the `request` parameter\n//     console.log(request.payload.message);\n//     // Send a response message\n//     sendResponse({\n//       message,\n//     });\n//   }\n// });\n\nlet screenWidth;\nlet screenHeight;\nchrome.system.display.getInfo((info) => {\n  screenWidth = info[0].bounds.width;\n  screenHeight = info[0].bounds.height;\n});\n\nconst isOptionsSetup = async () => {\n  try {\n    const { otterInstanceUrl, supabaseApiSecret } = await getStorageItems();\n    if (!otterInstanceUrl || !supabaseApiSecret) {\n      throw new Error('Missing otterInstanceUrl or supabaseApiSecret');\n    }\n    return true;\n  } catch (err) {\n    return false;\n  }\n};\n\nconst openBookmarkletPage = async (url) => {\n  const { otterInstanceUrl, newBookmarkWindowBehaviour } =\n    await getStorageItems();\n  // create new bookmark\n  if (newBookmarkWindowBehaviour === 'tab') {\n    chrome.tabs.create({\n      url: urlJoin(otterInstanceUrl, 'new', 'bookmark', {\n        query: {\n          bookmarklet: 'true',\n          url,\n        },\n      }),\n    });\n  } else {\n    const posX = (screenWidth - 730) / 2;\n    const posY = (screenHeight - 800) / 2;\n    chrome.windows.create({\n      url: urlJoin(otterInstanceUrl, 'new', 'bookmark', {\n        query: {\n          bookmarklet: 'true',\n          url,\n        },\n      }),\n      height: 800,\n      width: 500,\n      left: posX,\n      top: posY,\n      type: 'panel',\n    });\n  }\n};\n\nconst onContextClick = async (info, tab, saveQuick = true) => {\n  if (saveQuick) {\n    try {\n      if (info.linkUrl) {\n        quickSave(info.linkUrl);\n      } else {\n        quickSave(tab.url);\n      }\n    } catch (err) {\n      console.log(\n        `🚀 ~ onContextClick ~ saveQuick ~ onCommand.addListener ~ err`,\n        err\n      );\n    }\n  } else {\n    try {\n      if (info.linkUrl) {\n        openBookmarkletPage(info.linkUrl);\n      } else {\n        openBookmarkletPage(tab.url);\n      }\n    } catch (err) {\n      console.log(\n        `🚀 ~ onContextClick ~ save ~ onCommand.addListener ~ err`,\n        err\n      );\n    }\n  }\n};\n\nconst quickSave = async (url) => {\n  try {\n    const { otterInstanceUrl } = await getStorageItems();\n    const response = await otterFetch(\n      urlJoin(otterInstanceUrl, 'api', 'bookmark', 'new', {\n        query: {\n          url,\n        },\n      })\n    );\n    const { data } = response;\n    console.log(`🚀 ~ quickSave ~ data`, data);\n    return data;\n  } catch (err) {\n    console.log(`🚀 ~ quickSave ~ err`, err);\n  }\n};\n\nconst checkUrl = async (url) => {\n  try {\n    const { otterInstanceUrl } = await getStorageItems();\n    const response = await otterFetch(\n      urlJoin(otterInstanceUrl, 'api', 'search', {\n        query: {\n          searchTerm: url,\n        },\n      })\n    );\n\n    if (response.data.length) {\n      return {\n        data: response.data[0],\n        isSaved: response.data[0].url === url,\n      };\n    } else {\n      return {\n        data: null,\n        isSaved: false,\n      };\n    }\n  } catch (err) {\n    console.log(`🚀 ~ checkUrl ~ err`, err);\n  }\n};\n\nconst otterFetch = async (url) => {\n  const { supabaseApiSecret } = await getStorageItems();\n  return fetch(url, {\n    method: 'GET',\n    headers: {\n      Authorization: `Bearer ${supabaseApiSecret}`,\n    },\n  }).then((response) => {\n    if (response.ok) {\n      return response.json();\n    } else {\n      var error = new Error(response.statusText);\n      error.response = response;\n      throw error;\n    }\n  });\n};\n\nchrome.action.onClicked.addListener(async (tab) => {\n  if ((await isOptionsSetup()) === false) {\n    console.info('options not setup');\n    chrome.tabs.create({ url: chrome.runtime.getURL('options.html') });\n    return;\n  }\n\n  try {\n    const { otterInstanceUrl } = await getStorageItems();\n    const response = await checkUrl(tab.url);\n    const { isSaved, data } = response;\n    if (isSaved) {\n      // bookmark already exists, visit its page on Otter\n      chrome.tabs.create({\n        url: urlJoin(otterInstanceUrl, 'bookmark', data.key),\n      });\n    } else {\n      openBookmarkletPage(tab.url);\n    }\n  } catch (err) {\n    console.log(`🚀 ~ chrome.action.onClicked.addListener ~ err`, err);\n  }\n});\n\nchrome.contextMenus.onClicked.addListener((info, tab) => {\n  if (info.menuItemId === 'otter-context-quick-save') {\n    onContextClick(info, tab, true);\n  } else {\n    onContextClick(info, tab, false);\n  }\n});\n\nchrome.commands.onCommand.addListener((command, tab) => {\n  console.log(`onCommand`, { command, tab });\n  if (command === 'quick-save') {\n    try {\n      quickSave(tab.url);\n    } catch (err) {\n      console.log(`🚀 ~ chrome.commands.onCommand.addListener ~ err`, err);\n    }\n  }\n});\n\n/**\n * FIXME or change\n * Perhaps use [chrome.tabs.onActivated](https://developer.chrome.com/docs/extensions/reference/tabs/#event-onActivated)\n * or render something on the page instead. would need content script for that.\n * still need a reliable to to check the active tab has already been saved in Otter and\n * for the check to be run every time a new tab is opened/updated\n */\nchrome.webNavigation.onCompleted.addListener(async (details) => {\n  if ((await isOptionsSetup()) === false) {\n    return;\n  }\n\n  try {\n    const response = await checkUrl(details.url);\n    console.log(\n      `🚀 ~ chrome.webNavigation.onCompleted.addListener ~ response`,\n      response\n    );\n    const { isSaved, data } = response;\n    console.log(`🚀 ~ chrome.webNavigation.onCompleted.addListener ~ data`, {\n      isSaved,\n      data,\n    });\n    if (isSaved) {\n      chrome.action.setBadgeText({\n        text: '🟢',\n      });\n    }\n  } catch (err) {\n    console.log(`🚀 ~ chrome.webNavigation.onCompleted.addListener ~ err`, err);\n  }\n});\n\n/**\n * Context menus\n */\nchrome.contextMenus.create({\n  title: '🦦 Quick save to Otter',\n  contexts: ['page', 'link'],\n  id: 'otter-context-quick-save',\n});\n\nchrome.contextMenus.create({\n  title: '🦦 Save to Otter',\n  contexts: ['page', 'link'],\n  id: 'otter-context-save',\n});\n"],"names":[],"sourceRoot":""}